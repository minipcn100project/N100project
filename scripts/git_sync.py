# scripts/git_sync.py
"""
GitHub  
"""
import subprocess
import os
from datetime import datetime
from pathlib import Path

def sync_to_github(nft_data):
    """
    NFT  GitHub    

    Args:
        nft_data: {
            "index": 1,
            "title": "",
            "image_path": "output/images/nft_001.png",
            "landing_url": "...",
            ...
        }
    """
    try:
        print(" Syncing to GitHub...")

        #   public/images 
        import shutil
        image_filename = Path(nft_data["image_path"]).name
        dest_path = Path(f"public/images/{image_filename}")
        dest_path.parent.mkdir(parents=True, exist_ok=True)
        shutil.copy(nft_data["image_path"], dest_path)

        # Git  
        commands = [
            "git add public/",
            "git add output/metadata/",
            f'git commit -m " New NFT #{nft_data["index"]:03d}: {nft_data["title"]}\n\n Auto-generated by N100 Mini PC\n Style: {nft_data["style"]}\n {datetime.now().strftime("%Y-%m-%d %H:%M:%S")}"',
            "git push origin main"
        ]

        for cmd in commands:
            result = subprocess.run(
                cmd,
                shell=True,
                capture_output=True,
                text=True
            )

            if result.returncode != 0:
                # commit     
                if "nothing to commit" in result.stdout or "nothing to commit" in result.stderr:
                    print("  No changes to commit")
                    continue
                else:
                    print(f"  Git command warning: {result.stderr}")

        print(" Synced to GitHub")

    except Exception as e:
        print(f" GitHub sync failed: {str(e)}")


def setup_git_repo():
    """
    Git    ( 1 )
    """
    commands = [
        "git init",
        "git branch -M main",
        f'git remote add origin https://github.com/{os.getenv("GITHUB_REPO")}.git'
    ]

    for cmd in commands:
        subprocess.run(cmd, shell=True)

    print(" Git repository initialized")


if __name__ == "__main__":
    # 
    test_data = {
        "index": 999,
        "title": "Test NFT",
        "image_path": "output/images/nft_999.png",
        "style": "realistic"
    }
    # sync_to_github(test_data)
    print("Git sync ready!")
