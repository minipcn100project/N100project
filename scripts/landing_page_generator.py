# scripts/landing_page_generator.py
"""
NFT   
"""
from pathlib import Path
import json
import os
from datetime import datetime

class LandingPageGenerator:
    def __init__(self, output_dir="public/nft"):
        self.output_dir = Path(output_dir)
        self.output_dir.mkdir(parents=True, exist_ok=True)
        self.gallery_file = Path("public/gallery.json")

    def generate_nft_page(self, nft_data):
        """
         NFT  
        """
        domain = os.getenv("DOMAIN", "localhost")

        html_template = f"""<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{nft_data['title']} - N100 NFT</title>

    <!-- Twitter Card -->
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:site" content="@{os.getenv('TWITTER_HANDLE', 'N100NFT')}">
    <meta name="twitter:title" content="{nft_data['title']} #{nft_data['index']:03d}">
    <meta name="twitter:description" content="{nft_data['description'][:200]}">
    <meta name="twitter:image" content="https://{domain}/images/nft_{nft_data['index']:03d}.png">

    <!-- Open Graph -->
    <meta property="og:title" content="{nft_data['title']} #{nft_data['index']:03d}">
    <meta property="og:description" content="{nft_data['description']}">
    <meta property="og:image" content="https://{domain}/images/nft_{nft_data['index']:03d}.png">
    <meta property="og:url" content="https://{domain}/nft/{nft_data['index']}.html">
    <meta property="og:type" content="website">

    <style>
        * {{ margin: 0; padding: 0; box-sizing: border-box; }}
        body {{
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            min-height: 100vh;
            padding: 20px;
        }}
        .container {{
            max-width: 900px;
            margin: 0 auto;
        }}
        .nft-card {{
            background: rgba(255, 255, 255, 0.1);
            border-radius: 20px;
            padding: 40px;
            backdrop-filter: blur(10px);
            box-shadow: 0 20px 60px rgba(0,0,0,0.3);
        }}
        .nft-index {{
            opacity: 0.7;
            font-size: 1.2em;
            margin-bottom: 10px;
        }}
        .nft-title {{
            font-size: 2.5em;
            margin-bottom: 30px;
            font-weight: bold;
        }}
        .nft-image {{
            width: 100%;
            max-width: 512px;
            border-radius: 15px;
            margin: 0 auto 30px;
            display: block;
            box-shadow: 0 10px 40px rgba(0,0,0,0.5);
        }}
        .nft-description {{
            font-size: 1.3em;
            line-height: 1.8;
            margin-bottom: 30px;
        }}
        .mint-button {{
            display: inline-block;
            background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
            color: white;
            padding: 18px 50px;
            border-radius: 50px;
            text-decoration: none;
            font-size: 1.3em;
            font-weight: bold;
            margin: 20px 0;
            transition: transform 0.3s, box-shadow 0.3s;
            box-shadow: 0 5px 20px rgba(245, 87, 108, 0.4);
        }}
        .mint-button:hover {{
            transform: scale(1.05);
            box-shadow: 0 8px 30px rgba(245, 87, 108, 0.6);
        }}
        .specs {{
            margin-top: 40px;
            padding: 25px;
            background: rgba(0,0,0,0.3);
            border-radius: 15px;
        }}
        .specs div {{
            margin: 12px 0;
            font-size: 1.1em;
        }}
        .back-link {{
            display: inline-block;
            margin-top: 30px;
            color: white;
            text-decoration: none;
            font-size: 1.1em;
            transition: transform 0.3s;
        }}
        .back-link:hover {{
            transform: translateX(-5px);
        }}
    </style>
</head>
<body>
    <div class="container">
        <div class="nft-card">
            <div class="nft-index">#{nft_data['index']:03d}</div>
            <h1 class="nft-title">{nft_data['title']}</h1>

            <img src="../images/nft_{nft_data['index']:03d}.png"
                 alt="{nft_data['title']}"
                 class="nft-image">

            <p class="nft-description">{nft_data['description']}</p>

            <a href="{nft_data['mint_url']}" class="mint-button">
                 Mint Now for {nft_data['price']} SOL
            </a>

            <div class="specs">
                <div> <strong>Style:</strong> {nft_data['style'].title()}</div>
                <div> <strong>Generated by:</strong> Intel N100 Mini PC (CPU Only)</div>
                <div> <strong>Created:</strong> {nft_data.get('created_at', 'Just now')}</div>
                <div> <strong>Blockchain:</strong> Solana (Lazy Minting)</div>
                <div> <strong>Royalty:</strong> {os.getenv('NFT_ROYALTY_PERCENT', '5')}%</div>
            </div>

            <a href="../index.html" class="back-link"> Back to Gallery</a>
        </div>
    </div>
</body>
</html>
"""

        # HTML  
        output_file = self.output_dir / f"{nft_data['index']}.html"
        with open(output_file, 'w', encoding='utf-8') as f:
            f.write(html_template)

        #  JSON 
        self.update_gallery(nft_data)

        return f"https://{domain}/nft/{nft_data['index']}.html"

    def update_gallery(self, nft_data):
        """
        gallery.json 
        """
        if self.gallery_file.exists():
            with open(self.gallery_file, 'r', encoding='utf-8') as f:
                gallery = json.load(f)
        else:
            gallery = {"nfts": []}

        #  
        gallery["nfts"] = [nft for nft in gallery["nfts"] if nft["index"] != nft_data["index"]]

        #  NFT 
        gallery["nfts"].append({
            "index": nft_data["index"],
            "title": nft_data["title"],
            "description": nft_data["description"],
            "image": f"./images/nft_{nft_data['index']:03d}.png",
            "mint_url": nft_data["mint_url"],
            "landing_url": f"./nft/{nft_data['index']}.html",
            "price": nft_data["price"],
            "style": nft_data["style"],
            "created_at": nft_data.get("created_at", datetime.now().isoformat())
        })

        #  
        gallery["nfts"].sort(key=lambda x: x["index"], reverse=True)

        # 
        with open(self.gallery_file, 'w', encoding='utf-8') as f:
            json.dump(gallery, f, indent=2, ensure_ascii=False)


if __name__ == "__main__":
    # 
    gen = LandingPageGenerator()
    test_data = {
        "index": 999,
        "title": "Test NFT",
        "description": "This is a test",
        "mint_url": "https://example.com",
        "price": 0.5,
        "style": "realistic",
        "created_at": "2025-01-21 10:00:00"
    }
    url = gen.generate_nft_page(test_data)
    print(f"Generated: {url}")
